{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = \"bebe\" )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:14:45.252Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = \"bebe\" )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:14:45.520Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = \"bebe\" )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:14:45.871Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = \"bebe\" )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = \\\"bebe\\\" )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:14:47.311Z"}
{"errors":{"errors":[null,["/*\r","class Maiz {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // es bebe y adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"corn_baby.png\"\r","}else{\r","\"corn_adult.png\"\r","}\r","}\r","method precio(){\r","return 150\r","}\r","}\r","class Trigo {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // 2, 3 y 4\r","method image(){\r","return if(etapa == 1){\r","\"wheat_0.png\"\r","}else if(etapa == 2){\r","\"wheat_1.png\"\r","}else if(etapa == 3){\r","\"wheat_2.png\"\r","}else{\r","\"wheat_3.png\"\r","}\r","}\r","method precio(){\r","return (self.etapa() - 1) * 100\r","}\r","}\r","class Tomaco {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // 2, 3 y 4\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // 2, 3 y 4\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // 2, 3 y 4\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T01:15:13.417Z"}
{"errors":{"errors":[null,["/*\r","class Maiz {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // es bebe y adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"corn_baby.png\"\r","}else{\r","\"corn_adult.png\"\r","}\r","}\r","method precio(){\r","return 150\r","}\r","}\r","class Trigo {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // 2, 3 y 4\r","method image(){\r","return if(etapa == 1){\r","\"wheat_0.png\"\r","}else if(etapa == 2){\r","\"wheat_1.png\"\r","}else if(etapa == 3){\r","\"wheat_2.png\"\r","}else{\r","\"wheat_3.png\"\r","}\r","}\r","method precio(){\r","return (self.etapa() - 1) * 100\r","}\r","}\r","class Tomaco {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // 2, 3 y 4\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // 2, 3 y 4\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // 2, 3 y 4\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T01:15:13.698Z"}
{"errors":{"errors":[null,["/*\r","class Maiz {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // es bebe y adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"corn_baby.png\"\r","}else{\r","\"corn_adult.png\"\r","}\r","}\r","method precio(){\r","return 150\r","}\r","}\r","class Trigo {\r","var property position = game.at(1, 1)\r","var property etapa =  // 1, 2 y 3 son adultos\r","method image(){\r","return if(etapa == 1){\r","\"wheat_0.png\"\r","}else if(etapa == 2){\r","\"wheat_1.png\"\r","}else if(etapa == 3){\r","\"wheat_2.png\"\r","}else{\r","\"wheat_3.png\"\r","}\r","}\r","method precio(){\r","return (self.etapa() - 1) * 100\r","}\r","}\r","class Tomaco {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa =  // 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa =  // 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa =  // 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T01:15:25.561Z"}
{"errors":{"errors":[null,["/*\r","class Maiz {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // es bebe y adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"corn_baby.png\"\r","}else{\r","\"corn_adult.png\"\r","}\r","}\r","method precio(){\r","return 150\r","}\r","}\r","class Trigo {\r","var property position = game.at(1, 1)\r","var property etapa =  // 1, 2 y 3 son adultos\r","method image(){\r","return if(etapa == 1){\r","\"wheat_0.png\"\r","}else if(etapa == 2){\r","\"wheat_1.png\"\r","}else if(etapa == 3){\r","\"wheat_2.png\"\r","}else{\r","\"wheat_3.png\"\r","}\r","}\r","method precio(){\r","return (self.etapa() - 1) * 100\r","}\r","}\r","class Tomaco {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa =  // 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa =  // 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa =  // 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T01:15:25.735Z"}
{"errors":{"errors":[null,["/*\r","class Maiz {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // es bebe y adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"corn_baby.png\"\r","}else{\r","\"corn_adult.png\"\r","}\r","}\r","method precio(){\r","return 150\r","}\r","}\r","class Trigo {\r","var property position = game.at(1, 1)\r","var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\r","method image(){\r","return if(etapa == 1){\r","\"wheat_0.png\"\r","}else if(etapa == 2){\r","\"wheat_1.png\"\r","}else if(etapa == 3){\r","\"wheat_2.png\"\r","}else{\r","\"wheat_3.png\"\r","}\r","}\r","method precio(){\r","return (self.etapa() - 1) * 100\r","}\r","}\r","class Tomaco {\r","var property position = game.at(1, 1)\r","var property etapa = 1 // adulto es 2\r","method image(){\r","return if(etapa == 1){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // es bebe y adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 1 // adulto es 2\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T01:15:32.144Z"}
{"errors":{"errors":[null,["/*\r","class Maiz {\r","var property position = game.at(1, 1)\r","var property etapa = 0 // es bebe y adulto es 1\r","method image(){\r","return if(etapa == 1){\r","\"corn_baby.png\"\r","}else{\r","\"corn_adult.png\"\r","}\r","}\r","method precio(){\r","return 150\r","}\r","}\r","class Trigo {\r","var property position = game.at(1, 1)\r","var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\r","method image(){\r","return if(etapa == 1){\r","\"wheat_0.png\"\r","}else if(etapa == 2){\r","\"wheat_1.png\"\r","}else if(etapa == 3){\r","\"wheat_2.png\"\r","}else{\r","\"wheat_3.png\"\r","}\r","}\r","method precio(){\r","return (self.etapa() - 1) * 100\r","}\r","}\r","class Tomaco {\r","var property position = game.at(1, 1)\r","var property etapa = 0 // es bebe y adulto es 1\r","method image(){\r","return if(etapa == 1){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T01:15:45.412Z"}
{"errors":{"errors":[null,["/*\r","class Maiz {\r","var property position = game.at(1, 1)\r","var property etapa = 0 // es bebe y adulto es 1\r","method image(){\r","return if(etapa == 1){\r","\"corn_baby.png\"\r","}else{\r","\"corn_adult.png\"\r","}\r","}\r","method precio(){\r","return 150\r","}\r","}\r","class Trigo {\r","var property position = game.at(1, 1)\r","var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\r","method image(){\r","return if(etapa == 1){\r","\"wheat_0.png\"\r","}else if(etapa == 2){\r","\"wheat_1.png\"\r","}else if(etapa == 3){\r","\"wheat_2.png\"\r","}else{\r","\"wheat_3.png\"\r","}\r","}\r","method precio(){\r","return (self.etapa() - 1) * 100\r","}\r","}\r","class Tomaco {\r","var property position = game.at(1, 1)\r","var property etapa = 0 // es bebe y adulto es 1\r","method image(){\r","return if(etapa == 0){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 0){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 0){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Maiz {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"corn_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"corn_adult.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 150\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Trigo {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y 1, 2 y 3 son adultos\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 1){\\r\",\n      \"\\\"wheat_0.png\\\"\\r\",\n      \"}else if(etapa == 2){\\r\",\n      \"\\\"wheat_1.png\\\"\\r\",\n      \"}else if(etapa == 3){\\r\",\n      \"\\\"wheat_2.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"wheat_3.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return (self.etapa() - 1) * 100\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"class Tomaco {\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property etapa = 0 // es bebe y adulto es 1\\r\",\n      \"method image(){\\r\",\n      \"return if(etapa == 0){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T01:15:51.059Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:15:55.499Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:15:55.961Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:15:58.539Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:15:59.068Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 1)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:02.852Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 1)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:03.129Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 1)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:03.716Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 1)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:03.938Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 1)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:04.202Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 1)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:04.751Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 1){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 1){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:10.244Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:13.527Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 2 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:14.620Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:15.790Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:16.789Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:17.119Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:18.163Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:18.363Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 3\" )\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3\\\" )\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:19.412Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:21.294Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 3 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 3 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:21.654Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:23.441Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:23.969Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 4 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:24.822Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:25.695Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:25.987Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 1 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:26.241Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 4 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:30.917Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 4 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:31.268Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 4 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:31.611Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 4 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 2) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:31.885Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 4 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:35.892Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 2 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 4 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 2 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:36.686Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 1 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 4 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 4 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:16:37.038Z"}
{"level":"info","message":"⌛ Validating granja.wlk","timeElapsed":118,"timestamp":"2024-10-02T01:18:37.999Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:21:50.902Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:21:52.819Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:21:52.874Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:21:52.996Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:21:53.045Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:21:53.242Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:21:59.023Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:08.843Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:12.224Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:12.275Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:12.380Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{f988af} at cultivos.wlk:41 exhausted all cases without a match [Return]{f988af} at cultivos.wlk:41 exhausted all cases without a match","stack":"Error: [Return]{f988af} at cultivos.wlk:41 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:22:12.734Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{b98529} at cultivos.wlk:41 exhausted all cases without a match [Return]{b98529} at cultivos.wlk:41 exhausted all cases without a match","stack":"Error: [Return]{b98529} at cultivos.wlk:41 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:22:13.690Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:13.749Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:19.696Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:19.768Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{11e0ce} at cultivos.wlk:41 exhausted all cases without a match [Send]{11e0ce} at cultivos.wlk:41 exhausted all cases without a match","stack":"Error: [Send]{11e0ce} at cultivos.wlk:41 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:22:23.099Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{ed64b9} at cultivos.wlk:41 exhausted all cases without a match [Return]{ed64b9} at cultivos.wlk:41 exhausted all cases without a match","stack":"Error: [Return]{ed64b9} at cultivos.wlk:41 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:22:23.099Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:22:23.162Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:31.811Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:31.986Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:32.132Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:32.486Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:32.836Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:33.018Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:33.066Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:33.238Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:34.915Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:58.295Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:58.352Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:58.484Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:58.532Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:58.730Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\r\n\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:27:58.741Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:58.741Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\r\n\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:27:58.811Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:27:58.811Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Parameter]{4f03e4} at hector.wlk:81 exhausted all cases without a match [Parameter]{4f03e4} at hector.wlk:81 exhausted all cases without a match","stack":"Error: [Parameter]{4f03e4} at hector.wlk:81 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:28:03.068Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:28:03.133Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:28:03.207Z"}
{"errors":{"errors":[null,["/*\r","method sembrar(cultivo){\r","const cult = new cultivo(position = position)\r","granja.sembrar(cult)\r","game.addVisual(cult)\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:28:09.278Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":101,"timestamp":"2024-10-02T01:28:14.464Z"}
{"level":"info","message":"⌛ Validating hector.wlk","timeElapsed":196,"timestamp":"2024-10-02T01:28:14.665Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{39f085} at hector.wlk:78 exhausted all cases without a match [Send]{39f085} at hector.wlk:78 exhausted all cases without a match","stack":"Error: [Send]{39f085} at hector.wlk:78 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:28:17.948Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{494aa5} at hector.wlk:78 exhausted all cases without a match [If]{494aa5} at hector.wlk:78 exhausted all cases without a match","stack":"Error: [If]{494aa5} at hector.wlk:78 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:28:17.948Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:28:18.014Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:28:18.062Z"}
{"errors":{"errors":[null,["/*\r","method sembrar(cultivo){\r","const cult = new cultivo(position = position)\r","granja.sembrar(cult)\r","game.addVisual(cult)\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:28:32.129Z"}
{"errors":{"errors":[null,["/*\r","method sembrar(cultivo){\r","const cult = new cultivo(position = position)\r","granja.sembrar(cult)\r","game.addVisual(cult)\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T01:28:38.919Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:04.358Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:04.425Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:04.640Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:08.002Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Parameter]{7572a0} at granja.wlk:27 exhausted all cases without a match [Parameter]{7572a0} at granja.wlk:27 exhausted all cases without a match","stack":"Error: [Parameter]{7572a0} at granja.wlk:27 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:29:21.412Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:21.474Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Parameter]{a36fc5} at granja.wlk:27 exhausted all cases without a match [Parameter]{a36fc5} at granja.wlk:27 exhausted all cases without a match","stack":"Error: [Parameter]{a36fc5} at granja.wlk:27 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:29:21.575Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:21.646Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Parameter]{fbbe64} at granja.wlk:27 exhausted all cases without a match [Parameter]{fbbe64} at granja.wlk:27 exhausted all cases without a match","stack":"Error: [Parameter]{fbbe64} at granja.wlk:27 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:29:21.718Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:21.780Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Parameter]{0c1800} at granja.wlk:27 exhausted all cases without a match [Parameter]{0c1800} at granja.wlk:27 exhausted all cases without a match","stack":"Error: [Parameter]{0c1800} at granja.wlk:27 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:29:21.848Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:21.917Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Parameter]{0ddf8d} at granja.wlk:27 exhausted all cases without a match [Parameter]{0ddf8d} at granja.wlk:27 exhausted all cases without a match","stack":"Error: [Parameter]{0ddf8d} at granja.wlk:27 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:29:21.986Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:22.047Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{3394b3} at granja.wlk:28 exhausted all cases without a match [Send]{3394b3} at granja.wlk:28 exhausted all cases without a match","stack":"Error: [Send]{3394b3} at granja.wlk:28 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:29:40.976Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{c6af27} at granja.wlk:28 exhausted all cases without a match [If]{c6af27} at granja.wlk:28 exhausted all cases without a match","stack":"Error: [If]{c6af27} at granja.wlk:28 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:29:40.976Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:41.040Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:41.242Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:29:41.367Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:02.181Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:08.264Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:10.717Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{6c497f} at hector.wlk:22 exhausted all cases without a match [Send]{6c497f} at hector.wlk:22 exhausted all cases without a match","stack":"Error: [Send]{6c497f} at hector.wlk:22 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:30:10.739Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{56d437} at hector.wlk:22 exhausted all cases without a match [Send]{56d437} at hector.wlk:22 exhausted all cases without a match","stack":"Error: [Send]{56d437} at hector.wlk:22 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:30:10.739Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{2cb090} at hector.wlk:22 exhausted all cases without a match [If]{2cb090} at hector.wlk:22 exhausted all cases without a match","stack":"Error: [If]{2cb090} at hector.wlk:22 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T01:30:10.739Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:30:10.744Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:10.890Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:11.079Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:14.551Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{2cb090} at hector.wlk:22 exhausted all cases without a match [If]{2cb090} at hector.wlk:22 exhausted all cases without a match","stack":"Error: [If]{2cb090} at hector.wlk:22 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:30:14.572Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:30:14.595Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:14.632Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:30:14.632Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:14.801Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:14.915Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:15.100Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:15.197Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:16.144Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  33 | \t\tgranja.sembrar(maiz)\n  34 |         game.addVisual(maiz)\n> 35 | \t\t}else{\n     |   ^\n  36 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  37 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:17.191Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:30:17.214Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  41 | \t\t\tgranja.sembrar(tomaco)\n  42 | \t\t\tgame.addVisual(tomaco)\n> 43 | \t\t\t}else{\n     |    ^\n  44 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  45 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  41 | \t\t\tgranja.sembrar(tomaco)\n  42 | \t\t\tgame.addVisual(tomaco)\n> 43 | \t\t\t}else{\n     |    ^\n  44 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  45 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:30.512Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  40 | \t\t\tgranja.sembrar(tomaco)\n  41 | \t\t\tgame.addVisual(tomaco)\n> 42 | \t\t\t}else{\n     |    ^\n  43 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  44 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  40 | \t\t\tgranja.sembrar(tomaco)\n  41 | \t\t\tgame.addVisual(tomaco)\n> 42 | \t\t\t}else{\n     |    ^\n  43 | \t\t\tself.error(\"No puedes plantar, ya hay una planta aquí\")\n  44 | \t\t}\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:37.079Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  52 | \t\tgranja.cosechar(position)\n  53 | \t\t\n> 54 | \t}\n     |  ^\n  55 | \n  56 | \n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  52 | \t\tgranja.cosechar(position)\n  53 | \t\t\n> 54 | \t}\n     |  ^\n  55 | \n  56 | \n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\r\n\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:30:45.984Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{3ad83f} at hector.wlk:46 exhausted all cases without a match [Send]{3ad83f} at hector.wlk:46 exhausted all cases without a match","stack":"Error: [Send]{3ad83f} at hector.wlk:46 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:31:05.723Z"}
{"errors":{"errors":[null,["/*\r","method sembrar(cultivo){\r","const cult = new cultivo(position = position)\r","granja.sembrar(cult)\r","game.addVisual(cult)\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method sembrar(cultivo){\\r\",\n      \"const cult = new cultivo(position = position)\\r\",\n      \"granja.sembrar(cult)\\r\",\n      \"game.addVisual(cult)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:36:45.434Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:12.260Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:12.311Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:12.446Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:12.495Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:12.688Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:22.606Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:25.470Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:40.062Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:49.006Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:49.077Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{735e5e} at cultivos.wlk:45 exhausted all cases without a match [If]{735e5e} at cultivos.wlk:45 exhausted all cases without a match","stack":"Error: [If]{735e5e} at cultivos.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at q5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:730)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T01:37:52.260Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Assignment]{53aab1} at cultivos.wlk:45 exhausted all cases without a match [Assignment]{53aab1} at cultivos.wlk:45 exhausted all cases without a match","stack":"Error: [Assignment]{53aab1} at cultivos.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at q5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:730)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)","timestamp":"2024-10-02T01:37:52.260Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:52.318Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{bc24c5} at cultivos.wlk:45 exhausted all cases without a match [If]{bc24c5} at cultivos.wlk:45 exhausted all cases without a match","stack":"Error: [If]{bc24c5} at cultivos.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at q5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:730)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T01:37:54.852Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Assignment]{b093d5} at cultivos.wlk:45 exhausted all cases without a match [Assignment]{b093d5} at cultivos.wlk:45 exhausted all cases without a match","stack":"Error: [Assignment]{b093d5} at cultivos.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at q5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:730)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)","timestamp":"2024-10-02T01:37:54.852Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:37:54.910Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', any character/byte, comment, whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', any character/byte, comment, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:38:49.237Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:38:50.327Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:38:51.516Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:38:55.003Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:39:14.915Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:39:43.035Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:42:45.926Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:42:45.970Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:42:46.127Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \tmethod\n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \tmethod\n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:42:46.596Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \tmethod \n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   96 | \tmethod \n   97 | \n>  98 | }\n      | ^\n   99 | \n  100 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:42:46.770Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{3df48c} at cultivos.wlk:98 exhausted all cases without a match [Send]{3df48c} at cultivos.wlk:98 exhausted all cases without a match","stack":"Error: [Send]{3df48c} at cultivos.wlk:98 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:43:29.132Z"}
{"level":"error","message":"✘ Completions for node failed: Error: nuevaPosTomaco [Variable]{a364b5} at cultivos.wlk:98 exhausted all cases without a match nuevaPosTomaco [Variable]{a364b5} at cultivos.wlk:98 exhausted all cases without a match","stack":"Error: nuevaPosTomaco [Variable]{a364b5} at cultivos.wlk:98 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:43:29.132Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:29.198Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:29.248Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{f23bc6} at cultivos.wlk:97 exhausted all cases without a match [Send]{f23bc6} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{f23bc6} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:43:34.543Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{a3e73b} at cultivos.wlk:97 exhausted all cases without a match [Send]{a3e73b} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{a3e73b} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:43:34.543Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{e33138} at cultivos.wlk:97 exhausted all cases without a match [Send]{e33138} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{e33138} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T01:43:34.543Z"}
{"level":"error","message":"✘ Completions for node failed: Error: sigPositEnCol [Variable]{1572c0} at cultivos.wlk:97 exhausted all cases without a match sigPositEnCol [Variable]{1572c0} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: sigPositEnCol [Variable]{1572c0} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)","timestamp":"2024-10-02T01:43:34.543Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:34.603Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:34.666Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:34.769Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:34.921Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{0aee79} at cultivos.wlk:97 exhausted all cases without a match [Send]{0aee79} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{0aee79} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:43:37.202Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{4cbf67} at cultivos.wlk:97 exhausted all cases without a match [Send]{4cbf67} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{4cbf67} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:43:37.202Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{029e4a} at cultivos.wlk:97 exhausted all cases without a match [Send]{029e4a} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{029e4a} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T01:43:37.202Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{6f4cb3} at cultivos.wlk:97 exhausted all cases without a match [Send]{6f4cb3} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{6f4cb3} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)","timestamp":"2024-10-02T01:43:37.202Z"}
{"level":"error","message":"✘ Completions for node failed: Error: sigPositEnCol [Variable]{b03019} at cultivos.wlk:97 exhausted all cases without a match sigPositEnCol [Variable]{b03019} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: sigPositEnCol [Variable]{b03019} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)","timestamp":"2024-10-02T01:43:37.202Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:37.274Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:37.378Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:37.479Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{619aee} at cultivos.wlk:97 exhausted all cases without a match [Send]{619aee} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{619aee} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:43:42.415Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{14f8ee} at cultivos.wlk:97 exhausted all cases without a match [Send]{14f8ee} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{14f8ee} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T01:43:42.415Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{353e85} at cultivos.wlk:97 exhausted all cases without a match [Send]{353e85} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: [Send]{353e85} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T01:43:42.415Z"}
{"level":"error","message":"✘ Completions for node failed: Error: sigPositEnCol [Variable]{7f80a7} at cultivos.wlk:97 exhausted all cases without a match sigPositEnCol [Variable]{7f80a7} at cultivos.wlk:97 exhausted all cases without a match","stack":"Error: sigPositEnCol [Variable]{7f80a7} at cultivos.wlk:97 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)","timestamp":"2024-10-02T01:43:42.415Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:42.473Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:42.517Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:43:42.835Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:44:20.035Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  31 | \n  32 | \n> 33 | }\n     | ^\n  34 | \n  35 | class Trigo {\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  31 | \n  32 | \n> 33 | }\n     | ^\n  34 | \n  35 | class Trigo {\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:44:20.602Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  31 | \n  32 | \n> 33 | }\n     | ^\n  34 | \n  35 | class Trigo {\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  31 | \n  32 | \n> 33 | }\n     | ^\n  34 | \n  35 | class Trigo {\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:44:21.252Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:44:22.012Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:44:22.055Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:44:22.225Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  31 | \n  32 | \n> 33 | }\n     | ^\n  34 | \n  35 | class Trigo {\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  31 | \n  32 | \n> 33 | }\n     | ^\n  34 | \n  35 | class Trigo {\n\nExpected one of the following: \n\n'@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:44:23.621Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:44:23.638Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:44:26.306Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T01:46:41.643Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:49:39.622Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:49:39.762Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:49:40.082Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:49:44.609Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:49:44.897Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:49:46.773Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:49:47.164Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:51:44.247Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:51:44.318Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  102 | \tmethod\n  103 | \n> 104 | }\n      | ^\n  105 | \n  106 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  102 | \tmethod\n  103 | \n> 104 | }\n      | ^\n  105 | \n  106 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:51:44.804Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  102 | \tmethod \n  103 | \n> 104 | }\n      | ^\n  105 | \n  106 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n","stack":"Error: Failed to parse cultivos.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  102 | \tmethod \n  103 | \n> 104 | }\n      | ^\n  105 | \n  106 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T01:51:45.811Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:51:55.225Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:51:55.271Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:51:55.376Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{f5df26} at cultivos.wlk:103 exhausted all cases without a match [Return]{f5df26} at cultivos.wlk:103 exhausted all cases without a match","stack":"Error: [Return]{f5df26} at cultivos.wlk:103 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T01:51:55.721Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:51:58.635Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"305ceaa5-4db1-4de0-8bba-b552c1a4984c","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1636},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1637},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T01:52:03.073Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"305ceaa5-4db1-4de0-8bba-b552c1a4984c","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1636},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1637},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T01:52:03.694Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{984ed6} at cultivos.wlk:103 exhausted all cases without a match [If]{984ed6} at cultivos.wlk:103 exhausted all cases without a match","stack":"Error: [If]{984ed6} at cultivos.wlk:103 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T01:52:04.586Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:52:04.642Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T01:52:04.689Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"bb84dbf7-e3b0-4aa6-92eb-111a476e594b","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1647},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1648},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:01:08.174Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"23f93a56-b5a4-4ece-b317-aac0ca8e2c72","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1650},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1651},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:01:12.357Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"23f93a56-b5a4-4ece-b317-aac0ca8e2c72","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1650},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1651},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:01:12.753Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"23f93a56-b5a4-4ece-b317-aac0ca8e2c72","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1650},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1651},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:01:12.974Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"23f93a56-b5a4-4ece-b317-aac0ca8e2c72","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1650},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1651},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:01:16.661Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"23f93a56-b5a4-4ece-b317-aac0ca8e2c72","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1650},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1651},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:01:16.941Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"23f93a56-b5a4-4ece-b317-aac0ca8e2c72","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1650},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1651},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:01:17.986Z"}
{"errors":{"errors":[null,["/*\r","class Planta{\r","var property position = game.at(1, 1)\r","var property estado = \"bebe\" // adulto\r","const property tipo = null // trigo, maíz, tomaco, etc\r","method image(){\r","return if(esTrigo(tipo) )\r","return if(estado == \"bebe\"){\r","\"tomaco_baby.png\"\r","}else{\r","\"tomaco.png\"\r","}\r","}\r","method esAdulto() {\r","return estado == \"adulto\"\r","}\r","method precio(){\r","return 80\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"class Planta{\\r\",\n      \"var property position = game.at(1, 1)\\r\",\n      \"var property estado = \\\"bebe\\\" // adulto\\r\",\n      \"const property tipo = null // trigo, maíz, tomaco, etc\\r\",\n      \"method image(){\\r\",\n      \"return if(esTrigo(tipo) )\\r\",\n      \"return if(estado == \\\"bebe\\\"){\\r\",\n      \"\\\"tomaco_baby.png\\\"\\r\",\n      \"}else{\\r\",\n      \"\\\"tomaco.png\\\"\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAdulto() {\\r\",\n      \"return estado == \\\"adulto\\\"\\r\",\n      \"}\\r\",\n      \"method precio(){\\r\",\n      \"return 80\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:4641","timestamp":"2024-10-02T02:03:22.163Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"3feb56f1-d9c5-4457-b5f0-3faaf482868b","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1643},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1644},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:03:29.896Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:03:36.113Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:03:36.167Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:03:36.217Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:03:36.654Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:03:49.275Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:03:52.024Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:03:53.407Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:03:58.018Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:04:00.403Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:04:00.626Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:04:08.159Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:04:09.198Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"32b6cf02-55d4-4c5e-99d2-e00b26e922a1","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":2,"line":106,"offset":1683},"start":{"column":3,"line":103,"offset":1618}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[],"sourceMap":{"end":{"column":3,"line":106,"offset":1684},"start":{"column":27,"line":102,"offset":1613}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:04:09.592Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:04:12.077Z"}
{"errors":{"errors":[null,["/*\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 0 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T02:07:08.964Z"}
{"errors":{"errors":[null,["/*\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 0 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10585","timestamp":"2024-10-02T02:07:09.228Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at U1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:9868)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:9630","timestamp":"2024-10-02T02:08:41.845Z"}
{"errors":{"errors":[null,[null,[null,null,[null,"/*\r\n\t\tconst plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r\n\t\tsembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r\n\r\n\t\tconst plantaEvolucionada = self.evolucionar(plantaEnPosition)\r\n\t\t\r\n\t\tgame.removeVisual(plantaEnPosition)\r\n\t\tgame.addVisual(plantaEvolucionada)\r\n\t\t\r\n\t\tself.sembrar(plantaEvolucionada)\r\n*/"]]]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      null,\n      [\n        null,\n        null,\n        [\n          null,\n          \"/*\\r\\n\\t\\tconst plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\\n\\t\\tsembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\\n\\r\\n\\t\\tconst plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\\n\\t\\t\\r\\n\\t\\tgame.removeVisual(plantaEnPosition)\\r\\n\\t\\tgame.addVisual(plantaEvolucionada)\\r\\n\\t\\t\\r\\n\\t\\tself.sembrar(plantaEvolucionada)\\r\\n*/\"\n        ]\n      ]\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      null,\n      [\n        null,\n        null,\n        [\n          null,\n          \"/*\\r\\n\\t\\tconst plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\\n\\t\\tsembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\\n\\r\\n\\t\\tconst plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\\n\\t\\t\\r\\n\\t\\tgame.removeVisual(plantaEnPosition)\\r\\n\\t\\tgame.addVisual(plantaEvolucionada)\\r\\n\\t\\t\\r\\n\\t\\tself.sembrar(plantaEvolucionada)\\r\\n*/\"\n        ]\n      ]\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      null,\n      [\n        null,\n        null,\n        [\n          null,\n          \"/*\\r\\n\\t\\tconst plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\\n\\t\\tsembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\\n\\r\\n\\t\\tconst plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\\n\\t\\t\\r\\n\\t\\tgame.removeVisual(plantaEnPosition)\\r\\n\\t\\tgame.addVisual(plantaEvolucionada)\\r\\n\\t\\t\\r\\n\\t\\tself.sembrar(plantaEvolucionada)\\r\\n*/\"\n        ]\n      ]\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at B1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918)\n    at B1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51837)\n    at nln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:2842)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:2432\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5445\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056","timestamp":"2024-10-02T02:08:45.202Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T02:08:50.715Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T02:08:50.902Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:08:51.964Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:08:52.566Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:08:52.821Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:08:53.063Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:09:14.052Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:09:18.795Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:09:25.986Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:09:26.617Z"}
{"errors":{"errors":[null,["/*\r","method evolucionar(planta){\r","return if(planta.image() == 'corn_baby.png'){\r","new Maiz (position = planta.position(), etapa = 1 )\r","}\r","else if(planta.image() == 'tomaco_baby.png'){\r","const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\r","const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\r","new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\r","// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\r","// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\r","//EN CASO DE SER UN TOMACO \"ADULTO\" LO TENGO Q MOVER TAMBIEN??\r","}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\r","self.evolucionarTrigo(planta)\r","}else{\r","planta\r","}\r","}\r","method esAlgunaEvolucionDeTrigo(imagPlanta){\r","const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return evoluciones.any({evol => evol == imagPlanta})\r","}\r","method evolucionarTrigo(planta){\r","//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\r","//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\r","return \tif(planta.etapa() == 0){ \r","new Trigo (position=planta.position(), etapa = 1 )\r","}else if(planta.etapa() == 1 ){ \r","new Trigo (position=planta.position(), etapa = 2)\r","}else if(planta.etapa() == 2 ){ \r","new Trigo (position=planta.position(), etapa = 3 )\r","}else { \r","new Trigo (position=planta.position(), etapa = 0 )\r","}\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"method evolucionar(planta){\\r\",\n      \"return if(planta.image() == 'corn_baby.png'){\\r\",\n      \"new Maiz (position = planta.position(), etapa = 1 )\\r\",\n      \"}\\r\",\n      \"else if(planta.image() == 'tomaco_baby.png'){\\r\",\n      \"const sigPositEnCol = game.at(planta.position().x(), planta.position().y()+1)\\r\",\n      \"const nuevaPosTomaco = self.primeraPosicionLibreEnColumna(sigPositEnCol)\\r\",\n      \"new Tomaco(position = nuevaPosTomaco, etapa = 1) // mueve el tomaco 1 posicion mas arriba, si ya está ocupada, a la siguiente disponible,\\r\",\n      \"// y si llega al borde, lo pone abajo d todo. En caso de tambien estar ocupada, se fija en la de arriba d esa\\r\",\n      \"// puede q termien poniendolo en su posicion inicial en caso de estar toda la fila ocupada\\r\",\n      \"//EN CASO DE SER UN TOMACO \\\"ADULTO\\\" LO TENGO Q MOVER TAMBIEN??\\r\",\n      \"}else if(self.esAlgunaEvolucionDeTrigo(planta.image())){ //caso en el que sea trigo o la planta ya sea Maiz adulto.\\r\",\n      \"self.evolucionarTrigo(planta)\\r\",\n      \"}else{\\r\",\n      \"planta\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"method esAlgunaEvolucionDeTrigo(imagPlanta){\\r\",\n      \"const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return evoluciones.any({evol => evol == imagPlanta})\\r\",\n      \"}\\r\",\n      \"method evolucionarTrigo(planta){\\r\",\n      \"//yo tengo la certeza de que esto lo voy a ejecutar sabiendo q la planta es una evolucion d tomaco es uno de los elementos de la lista de evoluciones\\r\",\n      \"//const evoluciones = ['wheat_0.png','wheat_1.png','wheat_2.png','wheat_3.png']\\r\",\n      \"return \\tif(planta.etapa() == 0){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 1 )\\r\",\n      \"}else if(planta.etapa() == 1 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 2)\\r\",\n      \"}else if(planta.etapa() == 2 ){ \\r\",\n      \"new Trigo (position=planta.position(), etapa = 3 )\\r\",\n      \"}else { \\r\",\n      \"new Trigo (position=planta.position(), etapa = 0 )\\r\",\n      \"}\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11326)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T02:09:33.357Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:09:38.030Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:09:39.730Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:10:37.049Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:10:37.101Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:10:37.254Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"8915d340-bcf7-43dd-b769-9b6583e70af2","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":28,"line":127,"offset":1848},"start":{"column":12,"line":127,"offset":1832}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"args":[],"id":"88a685b5-c469-454d-9a36-0a3c43d83d0c","message":"validarEvolucion","metadata":[],"receiver":{"id":"1c0e8d3e-e6fe-4599-a2df-02a336a6090d","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":7,"line":125,"offset":1773},"start":{"column":3,"line":125,"offset":1769}}},"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":26,"line":125,"offset":1792},"start":{"column":3,"line":125,"offset":1769}}},{"id":"154ffa21-14e0-4f09-8e19-a386e9d27270","isConstant":true,"metadata":[],"name":"nuevaPosTomaco","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":11,"line":127,"offset":1831},"start":{"column":3,"line":126,"offset":1796}},"value":{"id":"5b09a34f-5433-41dc-9471-f56ee8269de1","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":11,"line":127,"offset":1831},"start":{"column":3,"line":127,"offset":1823}}}},{"id":"7bee48e0-9aaf-4316-833f-53f153904d67","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":12,"line":128,"offset":1861},"start":{"column":3,"line":128,"offset":1852}},"value":{"id":"62ac5342-c4c6-44d8-8ae0-0a81ebac516c","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":12,"line":128,"offset":1861},"start":{"column":11,"line":128,"offset":1860}},"value":1},"variable":{"id":"7a5bd990-0913-4177-b256-8151e8b7d7dc","metadata":[],"name":"etapa","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":8,"line":128,"offset":1857},"start":{"column":3,"line":128,"offset":1852}}}}],"sourceMap":{"end":{"column":3,"line":129,"offset":1865},"start":{"column":22,"line":124,"offset":1764}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:11:14.293Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{5cb31f} at hector.wlk:56 exhausted all cases without a match [Send]{5cb31f} at hector.wlk:56 exhausted all cases without a match","stack":"Error: [Send]{5cb31f} at hector.wlk:56 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:12:03.465Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:03.598Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:12:15.911Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{4775fe} at granja.wlk:45 exhausted all cases without a match [Send]{4775fe} at granja.wlk:45 exhausted all cases without a match","stack":"Error: [Send]{4775fe} at granja.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:12:22.467Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{5ce245} at granja.wlk:45 exhausted all cases without a match [Send]{5ce245} at granja.wlk:45 exhausted all cases without a match","stack":"Error: [Send]{5ce245} at granja.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T02:12:22.467Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{092b60} at granja.wlk:45 exhausted all cases without a match [If]{092b60} at granja.wlk:45 exhausted all cases without a match","stack":"Error: [If]{092b60} at granja.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T02:12:22.467Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:22.526Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:22.574Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:22.960Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{85d1f2} at granja.wlk:45 exhausted all cases without a match [Send]{85d1f2} at granja.wlk:45 exhausted all cases without a match","stack":"Error: [Send]{85d1f2} at granja.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:12:26.247Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{e96499} at granja.wlk:45 exhausted all cases without a match [Send]{e96499} at granja.wlk:45 exhausted all cases without a match","stack":"Error: [Send]{e96499} at granja.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774","timestamp":"2024-10-02T02:12:26.247Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [If]{96f122} at granja.wlk:45 exhausted all cases without a match [If]{96f122} at granja.wlk:45 exhausted all cases without a match","stack":"Error: [If]{96f122} at granja.wlk:45 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)","timestamp":"2024-10-02T02:12:26.247Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:26.304Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:26.492Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:26.644Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{2cc958} at granja.wlk:49 exhausted all cases without a match [Send]{2cc958} at granja.wlk:49 exhausted all cases without a match","stack":"Error: [Send]{2cc958} at granja.wlk:49 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:12:52.816Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:52.882Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:53.071Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:12:53.224Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T02:13:00.266Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847","timestamp":"2024-10-02T02:13:01.330Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{f4a015} at granja.wlk:134 exhausted all cases without a match [Send]{f4a015} at granja.wlk:134 exhausted all cases without a match","stack":"Error: [Send]{f4a015} at granja.wlk:134 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:15:27.610Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:15:27.679Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:15:27.911Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:15:28.046Z"}
{"errors":{"errors":[null,["/*\r","const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\r","sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\r","const plantaEvolucionada = self.evolucionar(plantaEnPosition)\r","game.removeVisual(plantaEnPosition)\r","game.addVisual(plantaEvolucionada)\r","self.sembrar(plantaEvolucionada)\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"const plantaEnPosition = self.plantaEn(_position) // la guardo antes de borrarla para despues borrar el visual y poder regarla\\r\",\n      \"sembrado = self.campoSinPlantaEn(_position) //saco la planta sin regar\\r\",\n      \"const plantaEvolucionada = self.evolucionar(plantaEnPosition)\\r\",\n      \"game.removeVisual(plantaEnPosition)\\r\",\n      \"game.addVisual(plantaEvolucionada)\\r\",\n      \"self.sembrar(plantaEvolucionada)\\r\"\n    ]\n  ]\n}\n    at Qp (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34609)\n    at x1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37949\n    at o.o1 (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:53808)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:51848\n    at zln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:11443)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3577\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10287\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:10083","timestamp":"2024-10-02T02:16:07.569Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{09c690} at game.wpgm:37 exhausted all cases without a match [Send]{09c690} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{09c690} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:24:29.535Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{9ce7c7} at game.wpgm:37 exhausted all cases without a match [Send]{9ce7c7} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{9ce7c7} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:24:29.535Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:24:29.595Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{038af7} at game.wpgm:37 exhausted all cases without a match [Send]{038af7} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{038af7} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:24:31.320Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{b35a5d} at game.wpgm:-- exhausted all cases without a match [Return]{b35a5d} at game.wpgm:-- exhausted all cases without a match","stack":"Error: [Return]{b35a5d} at game.wpgm:-- exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:24:31.321Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:24:31.386Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:24:31.469Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{4cf434} at game.wpgm:37 exhausted all cases without a match [Send]{4cf434} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{4cf434} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:24:32.143Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{169bab} at game.wpgm:-- exhausted all cases without a match [Return]{169bab} at game.wpgm:-- exhausted all cases without a match","stack":"Error: [Return]{169bab} at game.wpgm:-- exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:24:32.143Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{aed955} at game.wpgm:37 exhausted all cases without a match [Send]{aed955} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{aed955} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:24:32.256Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{907f66} at game.wpgm:-- exhausted all cases without a match [Return]{907f66} at game.wpgm:-- exhausted all cases without a match","stack":"Error: [Return]{907f66} at game.wpgm:-- exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:24:32.256Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{7ba01a} at game.wpgm:37 exhausted all cases without a match [Send]{7ba01a} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{7ba01a} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:24:32.563Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{6a7eb1} at game.wpgm:-- exhausted all cases without a match [Return]{6a7eb1} at game.wpgm:-- exhausted all cases without a match","stack":"Error: [Return]{6a7eb1} at game.wpgm:-- exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:24:32.563Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{c8422d} at game.wpgm:37 exhausted all cases without a match [Send]{c8422d} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{c8422d} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:24:32.697Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{1be0d5} at game.wpgm:-- exhausted all cases without a match [Return]{1be0d5} at game.wpgm:-- exhausted all cases without a match","stack":"Error: [Return]{1be0d5} at game.wpgm:-- exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:24:32.697Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Send]{d2e11d} at game.wpgm:37 exhausted all cases without a match [Send]{d2e11d} at game.wpgm:37 exhausted all cases without a match","stack":"Error: [Send]{d2e11d} at game.wpgm:37 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:24:32.807Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Return]{d5d59a} at game.wpgm:-- exhausted all cases without a match [Return]{d5d59a} at game.wpgm:-- exhausted all cases without a match","stack":"Error: [Return]{d5d59a} at game.wpgm:-- exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:24:32.807Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:05.617Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:08.630Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  74 | \tmethod\n  75 | \n> 76 | }\n     | ^\n  77 | \n  78 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  74 | \tmethod\n  75 | \n> 76 | }\n     | ^\n  77 | \n  78 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:25:09.701Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:09.716Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  74 | \tmethod \n  75 | \n> 76 | }\n     | ^\n  77 | \n  78 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n","stack":"Error: Failed to parse hector.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  74 | \tmethod \n  75 | \n> 76 | }\n     | ^\n  77 | \n  78 | \n\nExpected one of the following: \n\n'!=', '!==', '%', '&&', '*', '**', '+', '-', '->', '..', '..<', '/', '<', '<<', '<<<', '<=', '<=>', '<>', '==', '===', '>', '>..', '>=', '>>', '>>>', '?:', 'and', 'invert', 'negate', 'or', 'plus', '||', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:25:10.351Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:10.765Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:31.347Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:47.891Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:49.365Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:49.417Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:49.692Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:52.806Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [NamedArgument]{30e9a5} at hector.wlk:75 exhausted all cases without a match [NamedArgument]{30e9a5} at hector.wlk:75 exhausted all cases without a match","stack":"Error: [NamedArgument]{30e9a5} at hector.wlk:75 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:25:57.165Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:57.224Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:25:57.318Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:33.870Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:36.462Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:36.691Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:36.692Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:36.816Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:36.974Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:37.030Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:37.135Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:37.280Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:37.503Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:37.504Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:37.548Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:37.603Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:37.716Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:37.776Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:37.964Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:38.066Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:38.159Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:38.781Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:39.363Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:39.492Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:39.647Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:39.794Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:39.944Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:40.195Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:40.957Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:41.211Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:42.318Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:42.318Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:42.515Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:42.649Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:42.786Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:42.842Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:42.947Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:43.189Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:45.757Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:45.757Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:45.794Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:45.849Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:46.024Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:46.080Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:46.172Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:46.265Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:46.634Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:46.735Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:46.831Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:48.007Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:48.197Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:48.536Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:48.536Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:48.691Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:48.833Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:48.928Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:49.022Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:49.113Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:50.459Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:50.696Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:50.799Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:51.195Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:51.366Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:51.471Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:51.573Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:52.106Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:52.106Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:52.487Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:52.754Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:54.191Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:26:54.192Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:54.375Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:54.537Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:54.644Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:54.744Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:54.895Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:56.252Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:56.457Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:56.628Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:56.795Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:57.673Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:57.854Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:26:58.166Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:01.577Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:01.762Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:01.950Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:03.877Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:03.878Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:03.983Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:04.318Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:04.423Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:04.479Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:04.590Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:04.728Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\nidentifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\nidentifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:04.814Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\nidentifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\nidentifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:05.087Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:05.510Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:05.531Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:05.639Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:05.790Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:05.903Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:05.995Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:06.413Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:06.524Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'inherits', '{', whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:06.639Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:10.902Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:11.438Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:15.389Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:15.389Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:15.425Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:15.482Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  6 | class aspersor{\n  7 |     var\n> 8 | }\n    | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  6 | class aspersor{\n  7 |     var\n> 8 | }\n    | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:15.524Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:15.524Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  6 | class aspersor{\n  7 |     var \n> 8 | }\n    | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  6 | class aspersor{\n  7 |     var \n> 8 | }\n    | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:27:15.691Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:15.918Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:15.974Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:16.394Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:16.526Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:16.675Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:16.848Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:17.131Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.p [Field]{34114b} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.p [Field]{34114b} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.p [Field]{34114b} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:27:18.319Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:18.376Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:18.413Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:18.469Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.pos [Field]{9cc878} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.pos [Field]{9cc878} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.pos [Field]{9cc878} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:27:18.530Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:18.585Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.posi [Field]{9e44d6} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.posi [Field]{9e44d6} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.posi [Field]{9e44d6} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:27:18.685Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:18.743Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.posit [Field]{80bf7f} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.posit [Field]{80bf7f} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.posit [Field]{80bf7f} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:27:18.869Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:18.926Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:19.022Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.positio [Field]{ef338e} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.positio [Field]{ef338e} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.positio [Field]{ef338e} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:27:19.068Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:19.126Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{b5ae8f} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{b5ae8f} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{b5ae8f} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:27:19.256Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:19.311Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{8fd143} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{8fd143} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{8fd143} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:27:21.106Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:21.163Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{a54c0b} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{a54c0b} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{a54c0b} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:27:21.236Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:21.295Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{1401cd} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{1401cd} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{1401cd} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:27:21.346Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:21.401Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{e5b4b2} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{e5b4b2} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{e5b4b2} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:27:21.452Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:21.509Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:21.967Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:21.967Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:22.027Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:22.085Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:22.195Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:22.252Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:22.649Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:25.537Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:25.703Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:25.862Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:26.025Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:26.174Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:26.328Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:26.486Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:26.650Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:26.990Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{3b7558} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{3b7558} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{3b7558} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:27:27.425Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:27.481Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:27.482Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:27.604Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{ecd870} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{ecd870} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{ecd870} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at F5n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1160)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)","timestamp":"2024-10-02T02:27:27.839Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:27.895Z"}
{"level":"error","message":"✘ Completions for node failed: Error: [Literal]{49ecf3} at aspersor.wlk:7 exhausted all cases without a match [Literal]{49ecf3} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: [Literal]{49ecf3} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:27:27.951Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.aspersor.position [Field]{16fcd6} at aspersor.wlk:7 exhausted all cases without a match aspersor.aspersor.position [Field]{16fcd6} at aspersor.wlk:7 exhausted all cases without a match","stack":"Error: aspersor.aspersor.position [Field]{16fcd6} at aspersor.wlk:7 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at vh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:1004)\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:456)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)","timestamp":"2024-10-02T02:27:27.951Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:28.010Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":127,"timestamp":"2024-10-02T02:27:37.381Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:37.439Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":214,"timestamp":"2024-10-02T02:27:42.168Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:42.236Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:42.562Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:42.563Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:46.150Z"}
{"level":"error","message":"✘ Validate text document error: TypeError: o.allFields is not iterable o.allFields is not iterable","stack":"TypeError: o.allFields is not iterable\n    at Dtn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10804)\n    at Ntn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:10687)\n    at g.shouldPassValuesToAllAttributes.n (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:32955)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:29372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50949\n    at Array.map (<anonymous>)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:57:50936\n    at c (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13089)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:13080\n    at Array.reduce (<anonymous>)","timestamp":"2024-10-02T02:27:46.776Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:48.748Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:27:53.728Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"fileName":"aspersor.wlk","id":"390a30c5-ef2d-4835-8b8c-9acde09961ca","imports":[{"entity":{"id":"54d536f8-1d77-45b1-9488-49c06b585832","metadata":[],"name":"hector","scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":14,"line":1,"offset":13},"start":{"column":8,"line":1,"offset":7}}},"id":"4dc77aeb-f70a-443a-a250-a970870a3ac4","isGeneric":true,"metadata":[],"scope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":16,"line":1,"offset":15},"start":{"column":1,"line":1,"offset":0}}},{"entity":{"id":"9819175d-0cd6-434d-a327-6cdedd475192","metadata":[],"name":"cultivos","scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":16,"line":2,"offset":32},"start":{"column":8,"line":2,"offset":24}}},"id":"dac0af73-eeea-4e43-95ea-715f0c575180","isGeneric":false,"metadata":[],"scope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":16,"line":2,"offset":32},"start":{"column":1,"line":2,"offset":17}}}],"members":[{"id":"92e2bf1b-b632-4c11-b514-7832c8b65b6a","members":[{"id":"8eb8f3ae-8fd4-4f22-883c-f249f337acd0","isConstant":false,"isProperty":true,"metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":105},"start":{"column":5,"line":7,"offset":77}},"value":{"id":"9dd38b9f-e98d-4500-b056-96061b90208b","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":105},"start":{"column":29,"line":7,"offset":101}},"value":null}},{"body":{"id":"20f7f046-3eb3-48ee-8195-2d2a050e1abc","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"530fa844-9623-449d-9025-9bb0bc9a95a6","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"a9dbcd08-9beb-4705-bad3-80c394000709","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"97a64b91-5809-48bd-a446-c92b726ad8ee","isOverride":false,"metadata":[],"name":"position","parameters":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}},{"body":{"id":"1774beb1-b042-45e0-9a18-91e79a61b309","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"c7a0e2b7-6b2c-4c28-87a1-d8c95c1e74da","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"2788c32b-f23f-4aa4-8674-88f646b90d61","metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}},"variable":{"id":"80b42b84-27e6-464d-be9c-e3c19db6a08b","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"f68e4a14-f8db-4942-996a-e5e133cf4127","isOverride":false,"metadata":[],"name":"position","parameters":[{"id":"5a196517-010a-4a00-9660-29d71d677144","isVarArg":false,"metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}}],"metadata":[],"name":"Aspersor","problems":[],"scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"sourceMap":{"end":{"column":2,"line":8,"offset":108},"start":{"column":1,"line":6,"offset":56}},"supertypes":[]}],"metadata":[],"name":"aspersor","problems":[{"code":"malformedEntity","sourceMap":{"end":{"column":17,"line":2,"offset":33},"start":{"column":16,"line":2,"offset":32}}},{"code":"malformedEntity","sourceMap":{"end":{"column":16,"line":3,"offset":50},"start":{"column":1,"line":3,"offset":35}}}],"scope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:28:38.724Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"fileName":"aspersor.wlk","id":"390a30c5-ef2d-4835-8b8c-9acde09961ca","imports":[{"entity":{"id":"54d536f8-1d77-45b1-9488-49c06b585832","metadata":[],"name":"hector","scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":14,"line":1,"offset":13},"start":{"column":8,"line":1,"offset":7}}},"id":"4dc77aeb-f70a-443a-a250-a970870a3ac4","isGeneric":true,"metadata":[],"scope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":16,"line":1,"offset":15},"start":{"column":1,"line":1,"offset":0}}},{"entity":{"id":"9819175d-0cd6-434d-a327-6cdedd475192","metadata":[],"name":"cultivos","scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":16,"line":2,"offset":32},"start":{"column":8,"line":2,"offset":24}}},"id":"dac0af73-eeea-4e43-95ea-715f0c575180","isGeneric":false,"metadata":[],"scope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":16,"line":2,"offset":32},"start":{"column":1,"line":2,"offset":17}}}],"members":[{"id":"92e2bf1b-b632-4c11-b514-7832c8b65b6a","members":[{"id":"8eb8f3ae-8fd4-4f22-883c-f249f337acd0","isConstant":false,"isProperty":true,"metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":105},"start":{"column":5,"line":7,"offset":77}},"value":{"id":"9dd38b9f-e98d-4500-b056-96061b90208b","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":105},"start":{"column":29,"line":7,"offset":101}},"value":null}},{"body":{"id":"20f7f046-3eb3-48ee-8195-2d2a050e1abc","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"530fa844-9623-449d-9025-9bb0bc9a95a6","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"a9dbcd08-9beb-4705-bad3-80c394000709","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"97a64b91-5809-48bd-a446-c92b726ad8ee","isOverride":false,"metadata":[],"name":"position","parameters":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}},{"body":{"id":"1774beb1-b042-45e0-9a18-91e79a61b309","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"c7a0e2b7-6b2c-4c28-87a1-d8c95c1e74da","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"2788c32b-f23f-4aa4-8674-88f646b90d61","metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}},"variable":{"id":"80b42b84-27e6-464d-be9c-e3c19db6a08b","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"f68e4a14-f8db-4942-996a-e5e133cf4127","isOverride":false,"metadata":[],"name":"position","parameters":[{"id":"5a196517-010a-4a00-9660-29d71d677144","isVarArg":false,"metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}}],"metadata":[],"name":"Aspersor","problems":[],"scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"sourceMap":{"end":{"column":2,"line":8,"offset":108},"start":{"column":1,"line":6,"offset":56}},"supertypes":[]}],"metadata":[],"name":"aspersor","problems":[{"code":"malformedEntity","sourceMap":{"end":{"column":17,"line":2,"offset":33},"start":{"column":16,"line":2,"offset":32}}},{"code":"malformedEntity","sourceMap":{"end":{"column":16,"line":3,"offset":50},"start":{"column":1,"line":3,"offset":35}}}],"scope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:28:39.464Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:28:42.649Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:29:22.130Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:29:25.518Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:29:25.645Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:29:27.499Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:29:28.633Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"7037e6b2-2a64-45c2-8a5e-688a7f69250e","members":[{"id":"c770cfd9-8914-4f11-8eb7-c02bed3e8eb6","isConstant":false,"isProperty":true,"metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":106},"start":{"column":5,"line":7,"offset":78}},"value":{"id":"a06fd848-96e0-47f5-ac51-150b063e3177","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":106},"start":{"column":29,"line":7,"offset":102}},"value":null}},{"body":{"id":"d94bfd46-c9b7-455e-81e5-ed48cd56d217","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"cb8d2ec5-a97e-4b28-9868-9e82cec8bd4c","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"7ec953f4-d9d4-4923-86b9-70304ccb7f79","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"1e0cead6-3ed9-4687-8868-cb2c2013dcb5","isOverride":false,"metadata":[],"name":"position","parameters":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}},{"body":{"id":"c2672d24-37db-4fb8-ba6f-8e8965d7d381","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"de936310-3b9e-431b-8143-3b085817a6ef","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"49e71e48-e909-4249-aa5a-ef92a1084c0f","metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}},"variable":{"id":"11e88fb2-67a1-46d2-86bd-2324ad98c477","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"ac4fc408-2dd0-408b-bdbf-23faae0644c5","isOverride":false,"metadata":[],"name":"position","parameters":[{"id":"c5839d3d-3d14-4ab8-b310-8700f3314f81","isVarArg":false,"metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}}],"metadata":[],"name":"Aspersor","problems":[{"code":"malformedMember","sourceMap":{"end":{"column":33,"line":9,"offset":142},"start":{"column":5,"line":9,"offset":114}}}],"scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"sourceMap":{"end":{"column":2,"line":10,"offset":145},"start":{"column":1,"line":6,"offset":57}},"supertypes":[]},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:29:40.074Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"740e158c-cea4-48e0-a33a-d4eb7d7cf423","metadata":[],"problems":[{"code":"malformedSentence","sourceMap":{"end":{"column":55,"line":75,"offset":1764},"start":{"column":9,"line":75,"offset":1718}}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"a8b0d339-11ab-4bfc-aac4-8e4168002474","metadata":[],"name":"game","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":9,"line":75,"offset":1718},"start":{"column":5,"line":75,"offset":1714}}}],"sourceMap":{"end":{"column":3,"line":76,"offset":1768},"start":{"column":19,"line":74,"offset":1707}}},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:5372\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6056\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3612\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)","timestamp":"2024-10-02T02:30:08.126Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:30:13.092Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var\n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var\n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:30:13.262Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var \n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var \n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:30:14.096Z"}
{"level":"info","message":"onRequest - completionItem/resolve","timestamp":"2024-10-02T02:30:15.520Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var property\n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\nidentifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var property\n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\nidentifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:30:17.077Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var \n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n","stack":"Error: Failed to parse aspersor.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n   8 |     var \n   9 | \n> 10 | }\n     | ^\n\nExpected one of the following: \n\n'property', identifier, whitespace\n\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21840\n    at Array.map (<anonymous>)\n    at Ifn (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2244:21764)\n    at h2.buildEnvironmentFrom (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16306)\n    at h2.updateEnvironmentWith (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:16041)\n    at DL (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:2292)\n    at b3.invoke (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157188)\n    at o.fire (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:3:157958)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:57871\n    at Br (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:8:1561)","timestamp":"2024-10-02T02:30:19.119Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.Aspersor.i [Field]{15c463} at aspersor.wlk:8 exhausted all cases without a match aspersor.Aspersor.i [Field]{15c463} at aspersor.wlk:8 exhausted all cases without a match","stack":"Error: aspersor.Aspersor.i [Field]{15c463} at aspersor.wlk:8 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:30:19.736Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.Aspersor.im [Field]{7750d7} at aspersor.wlk:8 exhausted all cases without a match aspersor.Aspersor.im [Field]{7750d7} at aspersor.wlk:8 exhausted all cases without a match","stack":"Error: aspersor.Aspersor.im [Field]{7750d7} at aspersor.wlk:8 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:30:19.954Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.Aspersor.ima [Field]{b8b6b7} at aspersor.wlk:8 exhausted all cases without a match aspersor.Aspersor.ima [Field]{b8b6b7} at aspersor.wlk:8 exhausted all cases without a match","stack":"Error: aspersor.Aspersor.ima [Field]{b8b6b7} at aspersor.wlk:8 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:30:20.254Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.Aspersor.imag [Field]{19cd54} at aspersor.wlk:8 exhausted all cases without a match aspersor.Aspersor.imag [Field]{19cd54} at aspersor.wlk:8 exhausted all cases without a match","stack":"Error: aspersor.Aspersor.imag [Field]{19cd54} at aspersor.wlk:8 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:30:20.384Z"}
{"level":"error","message":"✘ Completions for node failed: Error: aspersor.Aspersor.image [Field]{1bce82} at aspersor.wlk:8 exhausted all cases without a match aspersor.Aspersor.image [Field]{1bce82} at aspersor.wlk:8 exhausted all cases without a match","stack":"Error: aspersor.Aspersor.image [Field]{1bce82} at aspersor.wlk:8 exhausted all cases without a match\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:38:6067\n    at hh (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:42)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2281:2700\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74872\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:30:20.534Z"}
{"level":"error","message":"✘ Failed to get type description: Error: Failed to print, found malformed node Failed to print, found malformed node","node":{"id":"474d256f-795c-49ba-ad44-9899cc3281ed","members":[{"id":"a4c41262-b879-4ea2-a5a3-2c93e0471526","isConstant":false,"isProperty":true,"metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":106},"start":{"column":5,"line":7,"offset":78}},"value":{"id":"7d925977-7f10-4570-8ace-982c0be4bd9c","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":33,"line":7,"offset":106},"start":{"column":29,"line":7,"offset":102}},"value":null}},{"id":"89074202-e0a0-4c9a-836d-23a0886219c9","isConstant":false,"isProperty":false,"metadata":[],"name":"image","scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"sourceMap":{"end":{"column":14,"line":9,"offset":157},"start":{"column":5,"line":9,"offset":148}},"value":{"id":"b0fee744-a45b-44c7-b288-47c57b1b65a6","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":null}},{"body":{"id":"fbac8e03-e47c-4a70-9eea-e093208ccb26","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"67cd4fac-9e52-4d61-be46-ac8922bc7c7a","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"4a697b28-e6e9-4756-a854-6559ae43ef58","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"495363da-124b-4b2b-9c42-6e8542c33c7f","isOverride":false,"metadata":[],"name":"position","parameters":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}},{"body":{"id":"8e80f1f2-8f7c-4549-8e9b-6c1b9461f648","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"sentences":[{"id":"b37bfa79-f8c3-477b-90d6-03b76b49a7f6","metadata":[],"scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"value":{"id":"8f69f629-e516-47e7-ab83-609452c327c3","metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}},"variable":{"id":"1a01ae09-5ef3-4018-83bd-9821344af578","metadata":[],"name":"position","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}}]},"id":"e376f2e1-22f9-4845-82a1-143c2b257e63","isOverride":false,"metadata":[],"name":"position","parameters":[{"id":"fe79ae6c-ceec-4f8f-b749-afb09a6e06d9","isVarArg":false,"metadata":[],"name":"<value>","scope":{"containerScope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}}],"scope":{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[]}}],"metadata":[],"name":"Aspersor","problems":[{"code":"malformedMember","sourceMap":{"end":{"column":35,"line":8,"offset":142},"start":{"column":5,"line":8,"offset":112}}},{"code":"malformedMember","sourceMap":{"end":{"column":16,"line":9,"offset":159},"start":{"column":15,"line":9,"offset":158}}}],"scope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]},{"contributions":{},"includedScopes":[]}]},"contributions":{},"includedScopes":[{"containerScope":{"containerScope":{"containerScope":{"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]},"contributions":{},"includedScopes":[]}]},"sourceMap":{"end":{"column":2,"line":11,"offset":165},"start":{"column":1,"line":6,"offset":57}},"supertypes":[]},"stack":"Error: Failed to print, found malformed node\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3533\n    at iln (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:68:3344)\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2275:847\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:2288:3774\n    at c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:37:74770\n    at Fe (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:8527)\n    at Pt (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6189)\n    at Gi (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\Renu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.5\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:478:21)","timestamp":"2024-10-02T02:30:25.219Z"}
